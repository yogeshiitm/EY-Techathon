"""
Django settings for TechHD project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#s+963o4g6ep*a&o!1%qb(h^=u%$&4^!4f^^gyds&7lav1s18g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['techhd.herokuapp.com', 'yogesh-testapp.herokuapp.com', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.humanize',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'vaccine_delivery',
    #below two are for sitemap
    #'django.contrib.sitemaps',
    #'django.contrib.sites'
    'accounts.apps.AccountsConfig',
    'widget_tweaks',
    'django_email_verification',
]

#for sitemap
SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # for heroku
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'TechHD.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, '')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'TechHD.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]
STATIC_ROOT = os.path.join(BASE_DIR, 'assets')

MEDIA_URL ='/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')


# https://docs.djangoproject.com/en/3.1/topics/auth/customizing/#auth-custom-user
# You cannot change the AUTH_USER_MODEL setting during the lifetime of a project 
# (i.e. once you have made and migrated models that depend on it) without serious effort. 
# It is intended to be set at the project start, and the model it refers to must be available 
# in the first migration of the app that it lives in. See Substituting a custom User model for more details.
AUTH_USER_MODEL="accounts.CustomUser"


from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}


def verified_callback(user):
    user.is_active = True

EMAIL_VERIFIED_CALLBACK = verified_callback
EMAIL_FROM_ADDRESS =  os.environ.get('EMAIL_HOST_USER')
EMAIL_MAIL_SUBJECT = 'Confirm your email'
EMAIL_MAIL_HTML = 'accounts/templates/accounts/mail_body.html'
EMAIL_MAIL_PLAIN = 'accounts/templates/accounts/mail_body.txt'
EMAIL_TOKEN_LIFE = 60 * 60
EMAIL_USE_LOCALTIME = True
#EMAIL_PAGE_TEMPLATE = 'accounts/confirm_template.html'
EMAIL_PAGE_TEMPLATE = 'accounts/login.html'
#EMAIL_PAGE_DOMAIN = 'https://techhd.herokuapp.com'
EMAIL_PAGE_DOMAIN = 'https://yogesh-testapp.herokuapp.com'
#EMAIL_PAGE_DOMAIN = 'http://127.0.0.1:8000'

# For Django Email Backend
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
#MAILER_EMAIL_BACKEND = EMAIL_BACKEND
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')


#https://stackoverflow.com/a/43184569/13962648
#to check if email and password are correct but user is not active (i.e. email not verified)
# by deault auth.autheticate returns none if user is not active even if email and password are correct
#AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.AllowAllUsersModelBackend']